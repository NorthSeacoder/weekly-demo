{
  "blogs": [
    {
      "id": "react-01",
      "slug": "react-01",
      "title": "我不知道的 React: Portals 的深度解析",
      "date": "2024-01-15T00:00:00.000Z",
      "tags": ["React", "前端", "组件"],
      "category": "React",
      "content": "# React Portals 深度解析\n\nReact Portals 是一个强大的功能，允许我们将子组件渲染到父组件 DOM 树之外的 DOM 节点中。\n\n## 基本用法\n\n```jsx\nimport { createPortal } from 'react-dom';\n\nfunction Modal({ children }) {\n  return createPortal(\n    children,\n    document.getElementById('modal-root')\n  );\n}\n```\n\n## 使用场景\n\n1. 模态框\n2. 工具提示\n3. 下拉菜单\n4. 通知组件\n\nPortals 提供了一种优雅的方式来处理这些需要脱离正常文档流的组件。",
      "readingTime": "5 min read"
    },
    {
      "id": "v8-js-engine-01",
      "slug": "v8-js-engine-01",
      "title": "我不知道的 V8: JavaScript 引擎的冰山一角",
      "date": "2024-01-10T00:00:00.000Z",
      "tags": ["V8", "JavaScript", "引擎"],
      "category": "V8",
      "content": "# V8 JavaScript 引擎深度解析\n\nV8 是 Google 开发的开源 JavaScript 引擎，被广泛应用于 Chrome 浏览器和 Node.js 中。\n\n## V8 的核心特性\n\n### 1. 即时编译 (JIT)\nV8 使用即时编译技术，将 JavaScript 代码直接编译为机器码，而不是解释执行。\n\n### 2. 隐藏类 (Hidden Classes)\nV8 使用隐藏类来优化对象属性的访问速度。\n\n### 3. 内联缓存 (Inline Caching)\n通过内联缓存技术，V8 可以快速访问对象的属性和方法。\n\n## 性能优化\n\n了解 V8 的工作原理有助于我们编写更高效的 JavaScript 代码。",
      "readingTime": "8 min read"
    },
    {
      "id": "http-01",
      "slug": "http-01",
      "title": "我不知道的 HTTP: 网络分层与请求全流程解析",
      "date": "2024-01-05T00:00:00.000Z",
      "tags": ["HTTP", "网络", "协议"],
      "category": "HTTP",
      "content": "# HTTP 协议深度解析\n\nHTTP (HyperText Transfer Protocol) 是互联网上应用最为广泛的一种网络协议。\n\n## 网络分层模型\n\n### OSI 七层模型\n1. 物理层\n2. 数据链路层\n3. 网络层\n4. 传输层\n5. 会话层\n6. 表示层\n7. 应用层\n\n### TCP/IP 四层模型\n1. 网络接口层\n2. 网络层\n3. 传输层\n4. 应用层\n\n## HTTP 请求流程\n\n1. DNS 解析\n2. TCP 连接建立\n3. HTTP 请求发送\n4. 服务器处理\n5. HTTP 响应返回\n6. 连接关闭\n\n理解这个流程对于前端开发者来说至关重要。",
      "readingTime": "10 min read"
    }
  ],
  "weekly": [
    {
      "id": "1",
      "slug": "1",
      "title": "我不知道的周刊第 1 期",
      "date": "2024-01-07T00:00:00.000Z",
      "tags": ["工具", "文章", "教程"],
      "source": ["GitHub", "Twitter", "博客"],
      "content": "\n## 工具\n\n### Cobalt\n一个快速、简单、流行的媒体下载器，无需广告、跟踪器、付费墙或其他废话。只需粘贴链接即可获得文件。\n\n### Git Alias\n一个强大的 Git 别名配置工具，让你的 Git 命令更简洁高效。\n\n## 文章\n\n### Web 开发最佳实践\n深入探讨现代 Web 开发的最佳实践，包括性能优化、安全性和可访问性。\n\n### JavaScript 引擎工作原理\n详细解析 V8 引擎的工作机制，帮助开发者写出更高效的代码。\n\n## 教程\n\n### React 18 新特性详解\n全面介绍 React 18 的新特性，包括并发渲染、自动批处理等。\n\n### TypeScript 高级类型\n深入学习 TypeScript 的高级类型系统，提升代码质量。",
      "sections": [
        {
          "content": "### Cobalt\n一个快速、简单、流行的媒体下载器，无需广告、跟踪器、付费墙或其他废话。只需粘贴链接即可获得文件。",
          "tags": ["工具", "下载"],
          "category": "工具",
          "source": "GitHub"
        },
        {
          "content": "### Git Alias\n一个强大的 Git 别名配置工具，让你的 Git 命令更简洁高效。",
          "tags": ["工具", "Git"],
          "category": "工具",
          "source": "GitHub"
        },
        {
          "content": "### Web 开发最佳实践\n深入探讨现代 Web 开发的最佳实践，包括性能优化、安全性和可访问性。",
          "tags": ["文章", "最佳实践"],
          "category": "文章",
          "source": "博客"
        },
        {
          "content": "### React 18 新特性详解\n全面介绍 React 18 的新特性，包括并发渲染、自动批处理等。",
          "tags": ["教程", "React"],
          "category": "教程",
          "source": "官方文档"
        }
      ]
    },
    {
      "id": "2",
      "slug": "2",
      "title": "我不知道的周刊第 2 期",
      "date": "2024-01-14T00:00:00.000Z",
      "tags": ["AI", "前端", "工具"],
      "source": ["Reddit", "Hacker News"],
      "content": "\n## AI\n\n### ChatGPT 新功能\nOpenAI 发布了 ChatGPT 的新功能，包括代码解释器和高级数据分析。\n\n### AI 辅助编程\n探讨 AI 如何改变软件开发流程，提高开发效率。\n\n## 前端\n\n### Next.js 14 发布\nNext.js 14 带来了许多性能改进和新特性。\n\n### CSS 容器查询\n深入了解 CSS 容器查询的使用方法和最佳实践。\n\n## 工具\n\n### Bun 1.0\nBun 1.0 正式发布，这是一个快速的 JavaScript 运行时。",
      "sections": [
        {
          "content": "### ChatGPT 新功能\nOpenAI 发布了 ChatGPT 的新功能，包括代码解释器和高级数据分析。",
          "tags": ["AI", "ChatGPT"],
          "category": "AI",
          "source": "OpenAI"
        },
        {
          "content": "### Next.js 14 发布\nNext.js 14 带来了许多性能改进和新特性。",
          "tags": ["前端", "Next.js"],
          "category": "前端",
          "source": "Vercel"
        },
        {
          "content": "### Bun 1.0\nBun 1.0 正式发布，这是一个快速的 JavaScript 运行时。",
          "tags": ["工具", "运行时"],
          "category": "工具",
          "source": "GitHub"
        }
      ]
    },
    {
      "id": "3",
      "slug": "3",
      "title": "我不知道的周刊第 3 期",
      "date": "2024-01-21T00:00:00.000Z",
      "tags": ["Vue", "性能", "设计"],
      "source": ["Vue.js", "Medium", "Dribbble"],
      "content": "\n## 前端框架\n\n### Vue 3.4 发布\nVue 3.4 带来了更好的性能和开发体验，包括新的响应式系统优化。\n\n### Nuxt 3.9 更新\nNuxt 3.9 引入了更多的性能优化和新的开发工具。\n\n## 性能优化\n\n### Web Vitals 最佳实践\n深入了解 Core Web Vitals 的优化策略和实施方法。\n\n### 图片优化技术\n现代 Web 应用中的图片优化技术和工具推荐。\n\n## 设计\n\n### 2024 UI 设计趋势\n探索 2024 年的 UI 设计趋势和最新的设计理念。",
      "sections": [
        {
          "content": "### Vue 3.4 发布\nVue 3.4 带来了更好的性能和开发体验，包括新的响应式系统优化。",
          "tags": ["Vue", "框架"],
          "category": "前端框架",
          "source": "Vue.js"
        },
        {
          "content": "### Web Vitals 最佳实践\n深入了解 Core Web Vitals 的优化策略和实施方法。",
          "tags": ["性能", "优化"],
          "category": "性能优化",
          "source": "Google"
        },
        {
          "content": "### 2024 UI 设计趋势\n探索 2024 年的 UI 设计趋势和最新的设计理念。",
          "tags": ["设计", "趋势"],
          "category": "设计",
          "source": "Dribbble"
        }
      ]
    },
    {
      "id": "4",
      "slug": "4",
      "title": "我不知道的周刊第 4 期",
      "date": "2024-01-28T00:00:00.000Z",
      "tags": ["Node.js", "数据库", "DevOps"],
      "source": ["Node.js", "PostgreSQL", "Docker"],
      "content": "\n## 后端技术\n\n### Node.js 21 新特性\nNode.js 21 带来了许多新特性，包括更好的 ES 模块支持和性能改进。\n\n### Express.js 5.0 Beta\nExpress.js 5.0 Beta 版本发布，带来了许多重大改进。\n\n## 数据库\n\n### PostgreSQL 16 发布\nPostgreSQL 16 引入了许多新功能和性能优化。\n\n### Redis 7.2 更新\nRedis 7.2 带来了更好的内存管理和新的数据结构。\n\n## DevOps\n\n### Docker Compose 新功能\nDocker Compose 的最新功能和最佳实践。",
      "sections": [
        {
          "content": "### Node.js 21 新特性\nNode.js 21 带来了许多新特性，包括更好的 ES 模块支持和性能改进。",
          "tags": ["Node.js", "后端"],
          "category": "后端技术",
          "source": "Node.js"
        },
        {
          "content": "### PostgreSQL 16 发布\nPostgreSQL 16 引入了许多新功能和性能优化。",
          "tags": ["数据库", "PostgreSQL"],
          "category": "数据库",
          "source": "PostgreSQL"
        },
        {
          "content": "### Docker Compose 新功能\nDocker Compose 的最新功能和最佳实践。",
          "tags": ["DevOps", "Docker"],
          "category": "DevOps",
          "source": "Docker"
        }
      ]
    },
    {
      "id": "5",
      "slug": "5",
      "title": "我不知道的周刊第 5 期",
      "date": "2024-02-04T00:00:00.000Z",
      "tags": ["TypeScript", "测试", "安全"],
      "source": ["TypeScript", "Jest", "OWASP"],
      "content": "\n## 编程语言\n\n### TypeScript 5.3 发布\nTypeScript 5.3 带来了更强大的类型系统和更好的开发体验。\n\n### JavaScript 新提案\n探索 JavaScript 的最新提案和未来发展方向。\n\n## 测试\n\n### Vitest 1.2 更新\nVitest 1.2 带来了更快的测试执行速度和新功能。\n\n### 端到端测试最佳实践\n现代 Web 应用的端到端测试策略和工具选择。\n\n## 安全\n\n### Web 安全最新威胁\n2024 年 Web 安全的最新威胁和防护措施。",
      "sections": [
        {
          "content": "### TypeScript 5.3 发布\nTypeScript 5.3 带来了更强大的类型系统和更好的开发体验。",
          "tags": ["TypeScript", "编程语言"],
          "category": "编程语言",
          "source": "Microsoft"
        },
        {
          "content": "### Vitest 1.2 更新\nVitest 1.2 带来了更快的测试执行速度和新功能。",
          "tags": ["测试", "Vitest"],
          "category": "测试",
          "source": "Vitest"
        },
        {
          "content": "### Web 安全最新威胁\n2024 年 Web 安全的最新威胁和防护措施。",
          "tags": ["安全", "Web"],
          "category": "安全",
          "source": "OWASP"
        }
      ]
    },
    {
      "id": "6",
      "slug": "6",
      "title": "我不知道的周刊第 6 期",
      "date": "2024-02-11T00:00:00.000Z",
      "tags": ["Svelte", "WebAssembly", "移动开发"],
      "source": ["Svelte", "WASM", "React Native"],
      "content": "\n## 前端框架\n\n### SvelteKit 2.0 发布\nSvelteKit 2.0 带来了更好的性能和开发体验。\n\n### Solid.js 1.8 更新\nSolid.js 1.8 引入了新的响应式原语和优化。\n\n## WebAssembly\n\n### WASM 在前端的应用\n探索 WebAssembly 在现代前端开发中的实际应用。\n\n### Rust + WASM 最佳实践\n使用 Rust 开发 WebAssembly 应用的最佳实践。\n\n## 移动开发\n\n### React Native 0.73\nReact Native 0.73 的新功能和改进。",
      "sections": [
        {
          "content": "### SvelteKit 2.0 发布\nSvelteKit 2.0 带来了更好的性能和开发体验。",
          "tags": ["Svelte", "框架"],
          "category": "前端框架",
          "source": "Svelte"
        },
        {
          "content": "### WASM 在前端的应用\n探索 WebAssembly 在现代前端开发中的实际应用。",
          "tags": ["WebAssembly", "性能"],
          "category": "WebAssembly",
          "source": "MDN"
        },
        {
          "content": "### React Native 0.73\nReact Native 0.73 的新功能和改进。",
          "tags": ["React Native", "移动开发"],
          "category": "移动开发",
          "source": "Meta"
        }
      ]
    },
    {
      "id": "7",
      "slug": "7",
      "title": "我不知道的周刊第 7 期",
      "date": "2024-02-18T00:00:00.000Z",
      "tags": ["CSS", "动画", "无障碍"],
      "source": ["CSS-Tricks", "Framer", "A11y"],
      "content": "\n## CSS\n\n### CSS 容器查询实战\n深入了解 CSS 容器查询的实际应用和最佳实践。\n\n### CSS Grid 高级技巧\n掌握 CSS Grid 的高级布局技巧和实用案例。\n\n## 动画\n\n### Framer Motion 11\nFramer Motion 11 带来了更强大的动画功能。\n\n### CSS 动画性能优化\n提升 CSS 动画性能的技巧和方法。\n\n## 无障碍\n\n### ARIA 最佳实践\n现代 Web 应用的 ARIA 使用指南和最佳实践。",
      "sections": [
        {
          "content": "### CSS 容器查询实战\n深入了解 CSS 容器查询的实际应用和最佳实践。",
          "tags": ["CSS", "响应式"],
          "category": "CSS",
          "source": "CSS-Tricks"
        },
        {
          "content": "### Framer Motion 11\nFramer Motion 11 带来了更强大的动画功能。",
          "tags": ["动画", "React"],
          "category": "动画",
          "source": "Framer"
        },
        {
          "content": "### ARIA 最佳实践\n现代 Web 应用的 ARIA 使用指南和最佳实践。",
          "tags": ["无障碍", "ARIA"],
          "category": "无障碍",
          "source": "W3C"
        }
      ]
    },
    {
      "id": "8",
      "slug": "8",
      "title": "我不知道的周刊第 8 期",
      "date": "2024-02-25T00:00:00.000Z",
      "tags": ["Astro", "静态站点", "SEO"],
      "source": ["Astro", "Jamstack", "Google"],
      "content": "\n## 静态站点生成\n\n### Astro 4.3 发布\nAstro 4.3 带来了更好的性能和新的集成功能。\n\n### 11ty 3.0 Alpha\nEleventy 3.0 Alpha 版本的新特性预览。\n\n## SEO\n\n### Core Web Vitals 更新\nGoogle 对 Core Web Vitals 的最新更新和优化建议。\n\n### 结构化数据最佳实践\n提升搜索引擎可见性的结构化数据实施指南。\n\n## Jamstack\n\n### 无头 CMS 对比\n2024 年主流无头 CMS 的功能对比和选择指南。",
      "sections": [
        {
          "content": "### Astro 4.3 发布\nAstro 4.3 带来了更好的性能和新的集成功能。",
          "tags": ["Astro", "静态站点"],
          "category": "静态站点生成",
          "source": "Astro"
        },
        {
          "content": "### Core Web Vitals 更新\nGoogle 对 Core Web Vitals 的最新更新和优化建议。",
          "tags": ["SEO", "性能"],
          "category": "SEO",
          "source": "Google"
        },
        {
          "content": "### 无头 CMS 对比\n2024 年主流无头 CMS 的功能对比和选择指南。",
          "tags": ["CMS", "Jamstack"],
          "category": "Jamstack",
          "source": "Jamstack.org"
        }
      ]
    },
    {
      "id": "9",
      "slug": "9",
      "title": "我不知道的周刊第 9 期",
      "date": "2024-03-03T00:00:00.000Z",
      "tags": ["GraphQL", "API", "微前端"],
      "source": ["GraphQL", "REST", "Module Federation"],
      "content": "\n## API 设计\n\n### GraphQL 最佳实践\n构建高效 GraphQL API 的设计原则和实施策略。\n\n### REST API 安全\nRESTful API 的安全设计和常见漏洞防护。\n\n## 微前端\n\n### Module Federation 实战\n使用 Webpack Module Federation 构建微前端应用。\n\n### 微前端架构模式\n不同微前端架构模式的对比和选择指南。\n\n## 工具\n\n### Postman 新功能\nPostman 最新功能和 API 测试最佳实践。",
      "sections": [
        {
          "content": "### GraphQL 最佳实践\n构建高效 GraphQL API 的设计原则和实施策略。",
          "tags": ["GraphQL", "API"],
          "category": "API 设计",
          "source": "GraphQL Foundation"
        },
        {
          "content": "### Module Federation 实战\n使用 Webpack Module Federation 构建微前端应用。",
          "tags": ["微前端", "Webpack"],
          "category": "微前端",
          "source": "Webpack"
        },
        {
          "content": "### Postman 新功能\nPostman 最新功能和 API 测试最佳实践。",
          "tags": ["工具", "API测试"],
          "category": "工具",
          "source": "Postman"
        }
      ]
    },
    {
      "id": "10",
      "slug": "10",
      "title": "我不知道的周刊第 10 期",
      "date": "2024-03-10T00:00:00.000Z",
      "tags": ["Deno", "边缘计算", "PWA"],
      "source": ["Deno", "Cloudflare", "PWA"],
      "content": "\n## 运行时\n\n### Deno 1.41 发布\nDeno 1.41 带来了更好的 Node.js 兼容性和新功能。\n\n### Bun vs Node.js 性能对比\n深入对比 Bun 和 Node.js 的性能差异。\n\n## 边缘计算\n\n### Cloudflare Workers 新功能\nCloudflare Workers 的最新功能和使用场景。\n\n### 边缘计算最佳实践\n在边缘计算环境中部署应用的最佳实践。\n\n## PWA\n\n### PWA 2024 更新\n渐进式 Web 应用的最新标准和实施指南。",
      "sections": [
        {
          "content": "### Deno 1.41 发布\nDeno 1.41 带来了更好的 Node.js 兼容性和新功能。",
          "tags": ["Deno", "运行时"],
          "category": "运行时",
          "source": "Deno"
        },
        {
          "content": "### Cloudflare Workers 新功能\nCloudflare Workers 的最新功能和使用场景。",
          "tags": ["边缘计算", "Serverless"],
          "category": "边缘计算",
          "source": "Cloudflare"
        },
        {
          "content": "### PWA 2024 更新\n渐进式 Web 应用的最新标准和实施指南。",
          "tags": ["PWA", "Web标准"],
          "category": "PWA",
          "source": "Google"
        }
      ]
    },
    {
      "id": "11",
      "slug": "11",
      "title": "我不知道的周刊第 11 期",
      "date": "2024-03-17T00:00:00.000Z",
      "tags": ["监控", "日志", "可观测性"],
      "source": ["Sentry", "DataDog", "OpenTelemetry"],
      "content": "\n## 应用监控\n\n### 前端错误监控\n现代前端应用的错误监控和性能追踪最佳实践。\n\n### 用户体验监控\n如何有效监控和改善用户体验指标。\n\n## 日志管理\n\n### 结构化日志\n实施结构化日志的策略和工具选择。\n\n### 日志聚合最佳实践\n大规模应用的日志聚合和分析方法。\n\n## 可观测性\n\n### OpenTelemetry 实战\n使用 OpenTelemetry 构建可观测性系统。",
      "sections": [
        {
          "content": "### 前端错误监控\n现代前端应用的错误监控和性能追踪最佳实践。",
          "tags": ["监控", "前端"],
          "category": "应用监控",
          "source": "Sentry"
        },
        {
          "content": "### 结构化日志\n实施结构化日志的策略和工具选择。",
          "tags": ["日志", "结构化"],
          "category": "日志管理",
          "source": "ELK Stack"
        },
        {
          "content": "### OpenTelemetry 实战\n使用 OpenTelemetry 构建可观测性系统。",
          "tags": ["可观测性", "追踪"],
          "category": "可观测性",
          "source": "CNCF"
        }
      ]
    },
    {
      "id": "12",
      "slug": "12",
      "title": "我不知道的周刊第 12 期",
      "date": "2024-03-24T00:00:00.000Z",
      "tags": ["Kubernetes", "容器", "云原生"],
      "source": ["CNCF", "Docker", "Kubernetes"],
      "content": "\n## 容器化\n\n### Docker 最佳实践\n2024 年 Docker 容器化的最佳实践和安全指南。\n\n### 多阶段构建优化\n使用多阶段构建优化 Docker 镜像大小和安全性。\n\n## Kubernetes\n\n### K8s 1.29 新特性\nKubernetes 1.29 的新功能和改进。\n\n### Helm Chart 最佳实践\n编写和维护 Helm Chart 的最佳实践。\n\n## 云原生\n\n### Service Mesh 对比\n主流 Service Mesh 解决方案的功能对比。",
      "sections": [
        {
          "content": "### Docker 最佳实践\n2024 年 Docker 容器化的最佳实践和安全指南。",
          "tags": ["Docker", "容器"],
          "category": "容器化",
          "source": "Docker"
        },
        {
          "content": "### K8s 1.29 新特性\nKubernetes 1.29 的新功能和改进。",
          "tags": ["Kubernetes", "容器编排"],
          "category": "Kubernetes",
          "source": "CNCF"
        },
        {
          "content": "### Service Mesh 对比\n主流 Service Mesh 解决方案的功能对比。",
          "tags": ["Service Mesh", "云原生"],
          "category": "云原生",
          "source": "CNCF"
        }
      ]
    },
    {
      "id": "13",
      "slug": "13",
      "title": "我不知道的周刊第 13 期",
      "date": "2024-03-31T00:00:00.000Z",
      "tags": ["机器学习", "TensorFlow", "PyTorch"],
      "source": ["Google AI", "Meta AI", "OpenAI"],
      "content": "\n## 机器学习\n\n### TensorFlow.js 4.0\nTensorFlow.js 4.0 在浏览器中运行机器学习模型的新功能。\n\n### 前端 AI 应用\n在前端应用中集成 AI 功能的实践指南。\n\n## 深度学习\n\n### Transformer 架构详解\n深入理解 Transformer 架构和注意力机制。\n\n### 大语言模型应用\n如何在实际项目中应用大语言模型。\n\n## AI 工具\n\n### GitHub Copilot 更新\nGitHub Copilot 的最新功能和使用技巧。",
      "sections": [
        {
          "content": "### TensorFlow.js 4.0\nTensorFlow.js 4.0 在浏览器中运行机器学习模型的新功能。",
          "tags": ["机器学习", "JavaScript"],
          "category": "机器学习",
          "source": "Google"
        },
        {
          "content": "### Transformer 架构详解\n深入理解 Transformer 架构和注意力机制。",
          "tags": ["深度学习", "架构"],
          "category": "深度学习",
          "source": "Papers"
        },
        {
          "content": "### GitHub Copilot 更新\nGitHub Copilot 的最新功能和使用技巧。",
          "tags": ["AI工具", "编程助手"],
          "category": "AI 工具",
          "source": "GitHub"
        }
      ]
    },
    {
      "id": "14",
      "slug": "14",
      "title": "我不知道的周刊第 14 期",
      "date": "2024-04-07T00:00:00.000Z",
      "tags": ["区块链", "Web3", "DeFi"],
      "source": ["Ethereum", "Solana", "Polygon"],
      "content": "\n## 区块链技术\n\n### Ethereum 2024 路线图\nEthereum 2024 年的技术发展路线图和重要更新。\n\n### Layer 2 解决方案对比\n主流 Layer 2 扩容方案的技术对比和选择指南。\n\n## Web3 开发\n\n### DApp 开发最佳实践\n去中心化应用开发的最佳实践和安全考虑。\n\n### 智能合约安全\n智能合约开发中的常见安全问题和防护措施。\n\n## DeFi\n\n### DeFi 协议分析\n主流 DeFi 协议的技术架构和创新点。",
      "sections": [
        {
          "content": "### Ethereum 2024 路线图\nEthereum 2024 年的技术发展路线图和重要更新。",
          "tags": ["区块链", "Ethereum"],
          "category": "区块链技术",
          "source": "Ethereum Foundation"
        },
        {
          "content": "### DApp 开发最佳实践\n去中心化应用开发的最佳实践和安全考虑。",
          "tags": ["Web3", "DApp"],
          "category": "Web3 开发",
          "source": "Web3 Foundation"
        },
        {
          "content": "### DeFi 协议分析\n主流 DeFi 协议的技术架构和创新点。",
          "tags": ["DeFi", "协议"],
          "category": "DeFi",
          "source": "DeFi Pulse"
        }
      ]
    },
    {
      "id": "15",
      "slug": "15",
      "title": "我不知道的周刊第 15 期",
      "date": "2024-04-14T00:00:00.000Z",
      "tags": ["游戏开发", "Unity", "Unreal"],
      "source": ["Unity", "Epic Games", "Godot"],
      "content": "\n## 游戏引擎\n\n### Unity 2024.1 发布\nUnity 2024.1 的新功能和性能改进。\n\n### Unreal Engine 5.4\nUnreal Engine 5.4 的最新特性和工具更新。\n\n## Web 游戏\n\n### WebGL 游戏开发\n使用 WebGL 开发高性能 Web 游戏的技巧。\n\n### Three.js 游戏实战\n基于 Three.js 的 3D Web 游戏开发指南。\n\n## 开源引擎\n\n### Godot 4.2 更新\nGodot 4.2 的新功能和改进。",
      "sections": [
        {
          "content": "### Unity 2024.1 发布\nUnity 2024.1 的新功能和性能改进。",
          "tags": ["游戏开发", "Unity"],
          "category": "游戏引擎",
          "source": "Unity"
        },
        {
          "content": "### WebGL 游戏开发\n使用 WebGL 开发高性能 Web 游戏的技巧。",
          "tags": ["Web游戏", "WebGL"],
          "category": "Web 游戏",
          "source": "MDN"
        },
        {
          "content": "### Godot 4.2 更新\nGodot 4.2 的新功能和改进。",
          "tags": ["开源引擎", "Godot"],
          "category": "开源引擎",
          "source": "Godot"
        }
      ]
    },
    {
      "id": "16",
      "slug": "16",
      "title": "我不知道的周刊第 16 期",
      "date": "2024-04-21T00:00:00.000Z",
      "tags": ["数据可视化", "D3.js", "Chart.js"],
      "source": ["Observable", "Chart.js", "Plotly"],
      "content": "\n## 数据可视化\n\n### D3.js 7.9 更新\nD3.js 7.9 的新功能和性能优化。\n\n### 现代图表库对比\n2024 年主流 JavaScript 图表库的功能对比。\n\n## 交互设计\n\n### 数据故事叙述\n如何通过数据可视化讲述引人入胜的故事。\n\n### 响应式图表设计\n创建适配各种设备的响应式数据图表。\n\n## 工具推荐\n\n### Observable Plot\nObservable Plot 的使用指南和最佳实践。",
      "sections": [
        {
          "content": "### D3.js 7.9 更新\nD3.js 7.9 的新功能和性能优化。",
          "tags": ["数据可视化", "D3.js"],
          "category": "数据可视化",
          "source": "Observable"
        },
        {
          "content": "### 数据故事叙述\n如何通过数据可视化讲述引人入胜的故事。",
          "tags": ["交互设计", "叙述"],
          "category": "交互设计",
          "source": "Storytelling with Data"
        },
        {
          "content": "### Observable Plot\nObservable Plot 的使用指南和最佳实践。",
          "tags": ["工具", "可视化"],
          "category": "工具推荐",
          "source": "Observable"
        }
      ]
    },
    {
      "id": "17",
      "slug": "17",
      "title": "我不知道的周刊第 17 期",
      "date": "2024-04-28T00:00:00.000Z",
      "tags": ["音视频", "WebRTC", "流媒体"],
      "source": ["WebRTC", "FFmpeg", "OBS"],
      "content": "\n## 音视频技术\n\n### WebRTC 最新标准\nWebRTC 的最新标准更新和浏览器支持情况。\n\n### 音视频编解码\n现代 Web 应用中的音视频编解码技术。\n\n## 流媒体\n\n### HLS vs DASH\n自适应流媒体协议的技术对比和选择指南。\n\n### 低延迟直播\n实现低延迟直播的技术方案和优化策略。\n\n## 工具\n\n### FFmpeg Web 应用\n在 Web 应用中集成 FFmpeg 的方法和实践。",
      "sections": [
        {
          "content": "### WebRTC 最新标准\nWebRTC 的最新标准更新和浏览器支持情况。",
          "tags": ["音视频", "WebRTC"],
          "category": "音视频技术",
          "source": "W3C"
        },
        {
          "content": "### HLS vs DASH\n自适应流媒体协议的技术对比和选择指南。",
          "tags": ["流媒体", "协议"],
          "category": "流媒体",
          "source": "Streaming Media"
        },
        {
          "content": "### FFmpeg Web 应用\n在 Web 应用中集成 FFmpeg 的方法和实践。",
          "tags": ["工具", "FFmpeg"],
          "category": "工具",
          "source": "FFmpeg"
        }
      ]
    },
    {
      "id": "18",
      "slug": "18",
      "title": "我不知道的周刊第 18 期",
      "date": "2024-05-05T00:00:00.000Z",
      "tags": ["物联网", "嵌入式", "传感器"],
      "source": ["Arduino", "Raspberry Pi", "ESP32"],
      "content": "\n## 物联网开发\n\n### ESP32 Web 开发\n使用 ESP32 开发 Web 连接的物联网设备。\n\n### 物联网安全\n物联网设备的安全设计和最佳实践。\n\n## 嵌入式系统\n\n### 微控制器编程\n现代微控制器的编程技巧和开发工具。\n\n### 实时操作系统\n嵌入式系统中的实时操作系统选择和应用。\n\n## 传感器技术\n\n### 传感器数据处理\n传感器数据的采集、处理和可视化。",
      "sections": [
        {
          "content": "### ESP32 Web 开发\n使用 ESP32 开发 Web 连接的物联网设备。",
          "tags": ["物联网", "ESP32"],
          "category": "物联网开发",
          "source": "Espressif"
        },
        {
          "content": "### 微控制器编程\n现代微控制器的编程技巧和开发工具。",
          "tags": ["嵌入式", "编程"],
          "category": "嵌入式系统",
          "source": "ARM"
        },
        {
          "content": "### 传感器数据处理\n传感器数据的采集、处理和可视化。",
          "tags": ["传感器", "数据处理"],
          "category": "传感器技术",
          "source": "Sensor Community"
        }
      ]
    },
    {
      "id": "19",
      "slug": "19",
      "title": "我不知道的周刊第 19 期",
      "date": "2024-05-12T00:00:00.000Z",
      "tags": ["量子计算", "算法", "密码学"],
      "source": ["IBM Quantum", "Google Quantum", "Microsoft Quantum"],
      "content": "\n## 量子计算\n\n### 量子算法基础\n量子计算的基本原理和核心算法介绍。\n\n### 量子编程语言\n主流量子编程语言和开发框架对比。\n\n## 算法优化\n\n### 并行算法设计\n现代多核处理器的并行算法设计原则。\n\n### 算法复杂度分析\n深入理解时间复杂度和空间复杂度分析。\n\n## 密码学\n\n### 后量子密码学\n量子计算时代的密码学发展和应用。",
      "sections": [
        {
          "content": "### 量子算法基础\n量子计算的基本原理和核心算法介绍。",
          "tags": ["量子计算", "算法"],
          "category": "量子计算",
          "source": "IBM Research"
        },
        {
          "content": "### 并行算法设计\n现代多核处理器的并行算法设计原则。",
          "tags": ["算法", "并行计算"],
          "category": "算法优化",
          "source": "ACM"
        },
        {
          "content": "### 后量子密码学\n量子计算时代的密码学发展和应用。",
          "tags": ["密码学", "安全"],
          "category": "密码学",
          "source": "NIST"
        }
      ]
    },
    {
      "id": "20",
      "slug": "20",
      "title": "我不知道的周刊第 20 期",
      "date": "2024-05-19T00:00:00.000Z",
      "tags": ["生物信息学", "计算生物学", "数据科学"],
      "source": ["Bioinformatics", "Nature", "NCBI"],
      "content": "\n## 生物信息学\n\n### 基因组数据分析\n现代基因组学数据的计算分析方法。\n\n### 蛋白质结构预测\nAI 在蛋白质结构预测中的应用和突破。\n\n## 计算生物学\n\n### 系统生物学建模\n生物系统的数学建模和仿真技术。\n\n### 进化算法应用\n进化算法在生物学问题中的应用。\n\n## 数据科学\n\n### 生物医学大数据\n生物医学大数据的处理和分析挑战。",
      "sections": [
        {
          "content": "### 基因组数据分析\n现代基因组学数据的计算分析方法。",
          "tags": ["生物信息学", "基因组"],
          "category": "生物信息学",
          "source": "NCBI"
        },
        {
          "content": "### 系统生物学建模\n生物系统的数学建模和仿真技术。",
          "tags": ["计算生物学", "建模"],
          "category": "计算生物学",
          "source": "Systems Biology"
        },
        {
          "content": "### 生物医学大数据\n生物医学大数据的处理和分析挑战。",
          "tags": ["数据科学", "生物医学"],
          "category": "数据科学",
          "source": "Nature Biotechnology"
        }
      ]
    },
    {
      "id": "21",
      "slug": "21",
      "title": "我不知道的周刊第 21 期",
      "date": "2024-05-26T00:00:00.000Z",
      "tags": ["边缘AI", "联邦学习", "隐私计算"],
      "source": ["Google AI", "Apple ML", "Microsoft AI"],
      "content": "\n## 边缘AI\n\n### 移动端AI部署\n在移动设备上部署机器学习模型的最佳实践。\n\n### 边缘计算优化\n边缘设备上的AI模型优化和加速技术。\n\n## 联邦学习\n\n### 联邦学习框架\n主流联邦学习框架的功能对比和选择指南。\n\n### 分布式训练\n大规模分布式机器学习训练的技术挑战。\n\n## 隐私计算\n\n### 差分隐私\n差分隐私在机器学习中的应用和实现。",
      "sections": [
        {
          "content": "### 移动端AI部署\n在移动设备上部署机器学习模型的最佳实践。",
          "tags": ["边缘AI", "移动开发"],
          "category": "边缘AI",
          "source": "TensorFlow Lite"
        },
        {
          "content": "### 联邦学习框架\n主流联邦学习框架的功能对比和选择指南。",
          "tags": ["联邦学习", "分布式"],
          "category": "联邦学习",
          "source": "Google Research"
        },
        {
          "content": "### 差分隐私\n差分隐私在机器学习中的应用和实现。",
          "tags": ["隐私计算", "安全"],
          "category": "隐私计算",
          "source": "Microsoft Research"
        }
      ]
    },
    {
      "id": "22",
      "slug": "22",
      "title": "我不知道的周刊第 22 期",
      "date": "2024-06-02T00:00:00.000Z",
      "tags": ["自动驾驶", "计算机视觉", "传感器融合"],
      "source": ["Tesla", "Waymo", "NVIDIA"],
      "content": "\n## 自动驾驶技术\n\n### 感知算法\n自动驾驶中的环境感知和目标检测算法。\n\n### 路径规划\n自动驾驶车辆的路径规划和决策算法。\n\n## 计算机视觉\n\n### 3D目标检测\n基于深度学习的3D目标检测技术。\n\n### 语义分割\n实时语义分割在自动驾驶中的应用。\n\n## 传感器融合\n\n### 多模态数据融合\n激光雷达、摄像头和雷达的数据融合技术。",
      "sections": [
        {
          "content": "### 感知算法\n自动驾驶中的环境感知和目标检测算法。",
          "tags": ["自动驾驶", "感知"],
          "category": "自动驾驶技术",
          "source": "Waymo Research"
        },
        {
          "content": "### 3D目标检测\n基于深度学习的3D目标检测技术。",
          "tags": ["计算机视觉", "3D检测"],
          "category": "计算机视觉",
          "source": "CVPR"
        },
        {
          "content": "### 多模态数据融合\n激光雷达、摄像头和雷达的数据融合技术。",
          "tags": ["传感器融合", "多模态"],
          "category": "传感器融合",
          "source": "IEEE"
        }
      ]
    },
    {
      "id": "23",
      "slug": "23",
      "title": "我不知道的周刊第 23 期",
      "date": "2024-06-09T00:00:00.000Z",
      "tags": ["虚拟现实", "增强现实", "元宇宙"],
      "source": ["Meta", "Apple Vision", "Unity XR"],
      "content": "\n## 虚拟现实\n\n### VR开发框架\n主流VR开发框架和工具的功能对比。\n\n### 沉浸式体验设计\n创造引人入胜的VR用户体验的设计原则。\n\n## 增强现实\n\n### AR应用开发\n移动端AR应用的开发技术和最佳实践。\n\n### 空间计算\n空间计算技术在AR中的应用和发展。\n\n## 元宇宙\n\n### 虚拟世界构建\n构建可扩展虚拟世界的技术架构。",
      "sections": [
        {
          "content": "### VR开发框架\n主流VR开发框架和工具的功能对比。",
          "tags": ["虚拟现实", "开发框架"],
          "category": "虚拟现实",
          "source": "Unity"
        },
        {
          "content": "### AR应用开发\n移动端AR应用的开发技术和最佳实践。",
          "tags": ["增强现实", "移动开发"],
          "category": "增强现实",
          "source": "ARCore"
        },
        {
          "content": "### 虚拟世界构建\n构建可扩展虚拟世界的技术架构。",
          "tags": ["元宇宙", "架构"],
          "category": "元宇宙",
          "source": "Meta Horizon"
        }
      ]
    },
    {
      "id": "24",
      "slug": "24",
      "title": "我不知道的周刊第 24 期",
      "date": "2024-06-16T00:00:00.000Z",
      "tags": ["绿色计算", "可持续发展", "能效优化"],
      "source": ["Green Software", "Climate Tech", "Energy Star"],
      "content": "\n## 绿色计算\n\n### 软件碳足迹\n如何测量和减少软件应用的碳足迹。\n\n### 能效编程\n编写能效优化代码的技巧和最佳实践。\n\n## 可持续发展\n\n### 绿色数据中心\n数据中心的可持续发展技术和创新。\n\n### 可再生能源\n可再生能源在IT基础设施中的应用。\n\n## 能效优化\n\n### 算法能效分析\n不同算法的能耗分析和优化策略。",
      "sections": [
        {
          "content": "### 软件碳足迹\n如何测量和减少软件应用的碳足迹。",
          "tags": ["绿色计算", "碳足迹"],
          "category": "绿色计算",
          "source": "Green Software Foundation"
        },
        {
          "content": "### 绿色数据中心\n数据中心的可持续发展技术和创新。",
          "tags": ["可持续发展", "数据中心"],
          "category": "可持续发展",
          "source": "Data Center Knowledge"
        },
        {
          "content": "### 算法能效分析\n不同算法的能耗分析和优化策略。",
          "tags": ["能效优化", "算法"],
          "category": "能效优化",
          "source": "ACM Computing Surveys"
        }
      ]
    },
    {
      "id": "25",
      "slug": "25",
      "title": "我不知道的周刊第 25 期",
      "date": "2024-06-23T00:00:00.000Z",
      "tags": ["未来技术", "创新趋势", "技术预测"],
      "source": ["MIT Technology Review", "Gartner", "IEEE Spectrum"],
      "content": "\n## 未来技术\n\n### 新兴技术趋势\n2024年最值得关注的新兴技术趋势分析。\n\n### 技术融合\n不同技术领域的融合创新和应用前景。\n\n## 创新趋势\n\n### 颠覆性创新\n正在改变行业格局的颠覆性技术创新。\n\n### 技术采用周期\n新技术从实验室到市场的采用周期分析。\n\n## 技术预测\n\n### 2030年技术展望\n对2030年技术发展的预测和展望。",
      "sections": [
        {
          "content": "### 新兴技术趋势\n2024年最值得关注的新兴技术趋势分析。",
          "tags": ["未来技术", "趋势"],
          "category": "未来技术",
          "source": "MIT Technology Review"
        },
        {
          "content": "### 颠覆性创新\n正在改变行业格局的颠覆性技术创新。",
          "tags": ["创新趋势", "颠覆性"],
          "category": "创新趋势",
          "source": "Harvard Business Review"
        },
        {
          "content": "### 2030年技术展望\n对2030年技术发展的预测和展望。",
          "tags": ["技术预测", "展望"],
          "category": "技术预测",
          "source": "Gartner"
        }
      ]
    }
  ],
  "site": {
    "name": "我不知道的周刊",
    "description": "分享前端开发、技术工具和有趣内容的周刊",
    "url": "http://localhost:4321",
    "author": "Weekly Demo"
  }
}