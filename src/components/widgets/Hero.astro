---
import Image from '~/components/common/Image.astro';
import Button from '~/components/ui/Button.astro';
import { cn } from '~/utils/utils';

import type { Hero as Props } from '~/types';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,

  content = await Astro.slots.render('content'),
  actions = await Astro.slots.render('actions'),
  image = await Astro.slots.render('image'),

  id,
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<section class="relative md:-mt-[76px] not-prose overflow-hidden min-h-screen flex items-center" {...id ? { id } : {}}>
  <!-- 极简背景 -->
  <div class="absolute inset-0 pointer-events-none" aria-hidden="true">
    <!-- 纯净背景 -->
    <div class="absolute inset-0 bg-white dark:bg-gray-900"></div>
    
    <!-- 极简装饰点 -->
    <div class="absolute top-1/4 right-1/4 w-2 h-2 bg-blue-500/20 rounded-full"></div>
    <div class="absolute bottom-1/3 left-1/5 w-1 h-1 bg-purple-500/20 rounded-full"></div>
    
    <slot name="bg">
      {bg ? <Fragment set:html={bg} /> : null}
    </slot>
  </div>

  <!-- 主要内容 -->
  <div class="relative max-w-7xl mx-auto px-6 sm:px-8 w-full">
    <div class="pt-0 md:pt-[76px] pointer-events-none"></div>
    <div class="py-16 md:py-24 lg:py-32">
      <div class="text-center pb-12 md:pb-16 max-w-6xl mx-auto">
        
        <!-- 标语 -->
        {tagline && (
          <div class="mb-16 animate-fade-in-down">
            <span class="inline-block px-4 py-2 text-sm font-medium text-gray-600 dark:text-gray-400 tracking-wide cursor-default">
              <Fragment set:html={tagline} />
            </span>
          </div>
        )}
        
        <!-- 主标题 -->
        {title && (
          <h1 class="text-5xl md:text-6xl lg:text-7xl xl:text-8xl font-light leading-[0.9] tracking-tight mb-12 font-heading animate-fade-in-up text-gray-900 dark:text-white" style="animation-delay: 0.2s;">
            <Fragment set:html={title} />
          </h1>
        )}
        
        <!-- 副标题 -->
        <div class="max-w-5xl mx-auto animate-fade-in-up" style="animation-delay: 0.4s;">
          {subtitle && (
            <div class="mb-16 leading-relaxed">
              <Fragment set:html={subtitle} />
            </div>
          )}
          
          <!-- 行动按钮 -->
          {actions && (
            <div class="flex flex-wrap sm:flex-row gap-6 justify-center items-center mb-20">
              {Array.isArray(actions) ? (
                actions.map((action, index) => (
                  <div class="animate-fade-in-up" style={`animation-delay: ${0.6 + index * 0.1}s;`}>
                    <Button 
                      variant={action?.variant || 'primary'}
                      size="md"
                      href={action?.href?.toString() || undefined}
                      target={action?.target || undefined}
                      rel={action?.rel || undefined}
                      class={cn(
                        "px-6 py-3 text-base font-medium rounded-lg transition-all duration-300 border-0 shadow-none hover:shadow-sm",
                        action?.class
                      )}
                    >
                      {action?.text || action?.title}
                    </Button>
                  </div>
                ))
              ) : (
                <Fragment set:html={actions} />
              )}
            </div>
          )}
        </div>
        
        {content && (
          <div class="animate-fade-in-up" style="animation-delay: 0.8s;">
            <Fragment set:html={content} />
          </div>
        )}
      </div>
      
      <!-- 图片/内容展示 -->
      <div class="animate-fade-in-up" style="animation-delay: 1s;">
        {image && (
          <div class="relative m-auto max-w-6xl">
            <!-- 图片装饰背景 -->
            <div class="absolute inset-0 bg-gradient-to-r from-blue-500/10 via-purple-500/10 to-pink-500/10 rounded-3xl blur-3xl transform scale-110 opacity-50"></div>
            
            <!-- 图片容器 -->
            <div class="relative">
              {typeof image === 'string' ? (
                <Fragment set:html={image} />
              ) : (
                <Image
                  class="mx-auto rounded-3xl shadow-2xl shadow-gray-500/20 dark:shadow-black/40 border border-gray-200/50 dark:border-gray-700/50 w-full hover:shadow-3xl hover:shadow-gray-500/30 dark:hover:shadow-black/50 transition-all duration-700 hover:scale-[1.02] hover:-translate-y-2"
                  widths={[400, 768, 1024, 2040]}
                  sizes="(max-width: 767px) 400px, (max-width: 1023px) 768px, (max-width: 2039px) 1024px, 2040px"
                  loading="eager"
                  width={1024}
                  height={576}
                  {...image}
                />
              )}
            </div>
          </div>
        )}
      </div>
    </div>
  </div>
  
</section>

<style>
  /* 动画定义 */
  @keyframes fade-in-down {
    0% {
      opacity: 0;
      transform: translateY(-20px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes fade-in-up {
    0% {
      opacity: 0;
      transform: translateY(20px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .animate-fade-in-down {
    animation: fade-in-down 0.8s ease-out both;
  }
  
  .animate-fade-in-up {
    animation: fade-in-up 0.8s ease-out both;
  }

  /* 优化文字渲染 */
  h1 {
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-feature-settings: "kern" 1, "liga" 1, "calt" 1;
  }

  /* 响应式优化 */
  @media (max-width: 640px) {
    h1 {
      font-size: 2.25rem;
      line-height: 1.1;
      margin-bottom: 2rem;
    }
    
    p {
      font-size: 1.125rem;
      margin-bottom: 2.5rem;
    }
  }

  /* 减少动画 */
  @media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }

  /* 高对比度模式 */
  @media (prefers-contrast: high) {
    .bg-gradient-to-r {
      background: hsl(var(--primary)) !important;
    }
    
    .text-transparent {
      color: hsl(var(--foreground)) !important;
      background: none !important;
      -webkit-background-clip: unset !important;
      background-clip: unset !important;
    }
  }

  /* 动画性能优化 */
  .animate-fade-in-down,
  .animate-fade-in-up {
    transform: translateZ(0);
    backface-visibility: hidden;
    perspective: 1000px;
  }

  /* 触摸设备优化 */
  @media (hover: none) {
    .hover\:scale-105:hover,
    .hover\:scale-\[1\.02\]:hover,
    .hover\:-translate-y-1:hover,
    .hover\:-translate-y-2:hover {
      transform: none;
    }
  }
</style>