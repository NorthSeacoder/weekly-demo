---
import { cn } from '~/utils/utils';
import Tags from './Tags.astro';
import dayjs from 'dayjs';

interface StatCardProps {
    title: string;
    date: string | Date;
    tags?: string[];
    desc?: string;
}

const { title, date, desc, tags = [] } = Astro.props as StatCardProps;

// 格式化日期
const formattedDate = new Date(date).toLocaleDateString('zh-CN', {
    month: 'short',
    day: 'numeric',
    year: 'numeric'
});

const isNew = dayjs(date).isAfter(dayjs().subtract(2, 'week'));

const cardClasses = cn(
    'group relative overflow-hidden h-full',
    'p-8 lg:p-10 rounded-xl transition-all duration-500 ease-out',
    'bg-white dark:bg-gray-900',
    'border border-gray-100 dark:border-gray-800',
    'hover:border-gray-200 dark:hover:border-gray-700',
    'hover:shadow-lg hover:shadow-gray-500/5 dark:hover:shadow-black/20',
    'hover:-translate-y-1',
    'cursor-pointer transform-gpu',
    'focus-within:ring-1 focus-within:ring-gray-300 dark:focus-within:ring-gray-700'
);
---

<div class={cardClasses}>
    <!-- New Badge - 重新设计 -->
    {isNew && (
        <div class="absolute top-4 right-4 z-20">
            <div class="w-2 h-2 bg-blue-500 rounded-full"></div>
        </div>
    )}

    <!-- 内容区域 -->
    <div class="relative z-10 h-full flex flex-col">
        <!-- 主标题 -->
        <h3 class="responsive-title font-medium text-gray-900 dark:text-white mb-6 transition-colors duration-300 font-heading leading-tight">
            {title}
        </h3>
        
        <!-- 底部信息区域 -->
        <div class="mt-auto space-y-4">
            <!-- 标签 -->
            {tags.length > 0 && (
                <div class="flex flex-wrap gap-1.5">
                    <Tags tags={tags} maxVisible={4} variant="modern" size="sm" compact />
                </div>
            )}
            
            <!-- 日期和装饰 -->
            <div class="flex items-center justify-between pt-6 border-t border-gray-100 dark:border-gray-800">
                <div class="flex items-center text-gray-400 dark:text-gray-500 text-sm">
                    <time datetime={date.toString()} class="font-medium tracking-wide">{formattedDate}</time>
                </div>
                
                <!-- 简约箭头 -->
                <div class="flex items-center justify-center w-6 h-6 transition-transform duration-300 group-hover:translate-x-1">
                    <svg class="w-4 h-4 text-gray-300 dark:text-gray-600 transition-colors duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
                    </svg>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* 文字渲染优化 */
    h3 {
        text-rendering: optimizeLegibility;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        font-feature-settings: "kern" 1, "liga" 1;
    }

    /* 文本截断 */
    .line-clamp-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
    
    .line-clamp-3 {
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    /* 动画性能优化 */
    .transform-gpu {
        transform: translateZ(0);
        backface-visibility: hidden;
        perspective: 1000px;
    }

    /* 智能响应式标题 */
    .responsive-title {
        /* 基础字体大小 */
        font-size: clamp(1.125rem, 4vw, 1.5rem);
        line-height: 1.3;
        
        /* 单行显示，超出省略 */
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        
        /* 最小高度确保布局一致性 */
        min-height: 1.8em;
        display: flex;
        align-items: center;
    }
    
    /* 容器查询支持 - 现代浏览器优化 */
    @supports (container-type: inline-size) {
        .group {
            container-type: inline-size;
        }
        
        @container (max-width: 280px) {
            .responsive-title {
                font-size: 1rem;
                line-height: 1.2;
            }
        }
        
        @container (min-width: 281px) and (max-width: 320px) {
            .responsive-title {
                font-size: 1.125rem;
                line-height: 1.25;
            }
        }
        
        @container (min-width: 321px) and (max-width: 360px) {
            .responsive-title {
                font-size: 1.25rem;
                line-height: 1.3;
            }
        }
        
        @container (min-width: 361px) {
            .responsive-title {
                font-size: 1.5rem;
                line-height: 1.3;
            }
        }
    }

    /* 回退方案 - 基于视口宽度的响应式调整 */
    @media (max-width: 480px) {
        .group {
            padding: 1.25rem;
        }
        
        .responsive-title {
            font-size: 1rem;
            line-height: 1.2;
        }
    }
    
    @media (min-width: 481px) and (max-width: 640px) {
        .responsive-title {
            font-size: 1.125rem;
            line-height: 1.25;
        }
    }
    
    @media (min-width: 641px) and (max-width: 768px) {
        .responsive-title {
            font-size: 1.25rem;
            line-height: 1.3;
        }
    }
    
    @media (min-width: 769px) {
        .responsive-title {
            font-size: 1.5rem;
            line-height: 1.3;
        }
    }

    /* 减少动画对于喜欢减少动画的用户 */
    @media (prefers-reduced-motion: reduce) {
        .group {
            transition: none !important;
        }
        
        .group *,
        .group::before,
        .group::after {
            animation: none !important;
            transition: none !important;
        }
    }

    /* 触摸设备优化 */
    @media (hover: none) {
        .group:hover {
            transform: none;
        }
        
        .group:hover::before {
            opacity: 0.3;
        }
    }

    /* 高对比度模式 */
    @media (prefers-contrast: high) {
        .group {
            border-width: 2px;
            background: hsl(var(--card));
            color: hsl(var(--card-foreground));
        }
        
        .group::before {
            display: none;
        }
    }
    
    /* 暗色模式特殊处理 */
    .dark .group {
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
    }
    
    .dark .group:hover {
        box-shadow: 0 20px 40px rgba(59, 130, 246, 0.15);
    }
    
    /* 性能优化 */
    .group,
    .group::before,
    .group::after {
        will-change: transform, opacity;
    }
    
    /* 焦点状态增强 */
    .group:focus-within {
        outline: none;
        transform: translateY(-1px) scale(1.01);
    }
    
    /* 加载状态 */
    .group[data-loading="true"] {
        pointer-events: none;
        opacity: 0.7;
    }
    
    .group[data-loading="true"]::after {
        content: '';
        position: absolute;
        inset: 0;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        animation: shimmer 1.5s linear infinite;
        border-radius: inherit;
    }
    
    @keyframes shimmer {
        0% { transform: translateX(-100%); }
        100% { transform: translateX(100%); }
    }
</style>